{"ast":null,"code":"var _jsxFileName = \"/home/ishan/WebstormProjects/content/client/src/components/ContentContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport axios from \"axios\";\nimport { TabContext } from \"../context/TabContext.js\";\n\n// Import dynamic content components\nimport VideoPlayer from \"./VideoPlayer.jsx\";\nimport TextContent from \"./TextContent.jsx\";\nimport SimulationEmbed from \"./SimulationEmbed.jsx\";\nimport QuizComponent from \"./QuizComponent.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentContainer = () => {\n  _s();\n  // Retrieve the currently selected topic from context\n  const {\n    currentTopic\n  } = useContext(TabContext);\n\n  // Use React Query to fetch content for the selected topic\n  const {\n    data,\n    isLoading,\n    error\n  } = useQuery([\"content\", currentTopic], () => axios.get(`/api/topics/${currentTopic}`).then(res => res.data), {\n    enabled: !!currentTopic // Only fetch if currentTopic is set\n  });\n\n  // Helper function to render content based on its type\n  const renderContent = section => {\n    var _section$questions$;\n    switch (section.type) {\n      case \"video\":\n        return /*#__PURE__*/_jsxDEV(VideoPlayer, {\n          url: section.url\n        }, section.url, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 24\n        }, this);\n      case \"text\":\n        return /*#__PURE__*/_jsxDEV(TextContent, {\n          content: section.content\n        }, section.content.slice(0, 20), false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 24\n        }, this);\n      case \"simulation\":\n        return /*#__PURE__*/_jsxDEV(SimulationEmbed, {\n          url: section.url\n        }, section.url, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 24\n        }, this);\n      case \"quiz\":\n        return /*#__PURE__*/_jsxDEV(QuizComponent, {\n          questions: section.questions\n        }, ((_section$questions$ = section.questions[0]) === null || _section$questions$ === void 0 ? void 0 : _section$questions$.question) || \"quiz\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this);\n      default:\n        return null;\n    }\n  };\n\n  // If no topic is selected, prompt the user to select one\n  if (!currentTopic) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-full p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-600\",\n        children: \"Please select a topic to view its content.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Loading state\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-full p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-600\",\n        children: \"Loading content...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-full p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-red-500\",\n        children: \"Error loading content. Please try again later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-container mx-auto p-4\",\n    children: data.sections && data.sections.map(section => renderContent(section))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(ContentContainer, \"yXrB6O3dMfaFtcnido2ps4w0aoU=\", false, function () {\n  return [useQuery];\n});\n_c = ContentContainer;\nexport default ContentContainer;\nvar _c;\n$RefreshReg$(_c, \"ContentContainer\");","map":{"version":3,"names":["React","useContext","useQuery","axios","TabContext","VideoPlayer","TextContent","SimulationEmbed","QuizComponent","jsxDEV","_jsxDEV","ContentContainer","_s","currentTopic","data","isLoading","error","get","then","res","enabled","renderContent","section","_section$questions$","type","url","fileName","_jsxFileName","lineNumber","columnNumber","content","slice","questions","question","className","children","sections","map","_c","$RefreshReg$"],"sources":["/home/ishan/WebstormProjects/content/client/src/components/ContentContainer.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport axios from \"axios\";\nimport { TabContext } from \"../context/TabContext.js\";\n\n// Import dynamic content components\nimport VideoPlayer from \"./VideoPlayer.jsx\";\nimport TextContent from \"./TextContent.jsx\";\nimport SimulationEmbed from \"./SimulationEmbed.jsx\";\nimport QuizComponent from \"./QuizComponent.jsx\";\n\nconst ContentContainer = () => {\n    // Retrieve the currently selected topic from context\n    const { currentTopic } = useContext(TabContext);\n\n    // Use React Query to fetch content for the selected topic\n    const { data, isLoading, error } = useQuery(\n        [\"content\", currentTopic],\n        () => axios.get(`/api/topics/${currentTopic}`).then((res) => res.data),\n        {\n            enabled: !!currentTopic, // Only fetch if currentTopic is set\n        }\n    );\n\n    // Helper function to render content based on its type\n    const renderContent = (section) => {\n        switch (section.type) {\n            case \"video\":\n                return <VideoPlayer url={section.url} key={section.url} />;\n            case \"text\":\n                return <TextContent content={section.content} key={section.content.slice(0, 20)} />;\n            case \"simulation\":\n                return <SimulationEmbed url={section.url} key={section.url} />;\n            case \"quiz\":\n                return (\n                    <QuizComponent\n                        questions={section.questions}\n                        key={section.questions[0]?.question || \"quiz\"}\n                    />\n                );\n            default:\n                return null;\n        }\n    };\n\n    // If no topic is selected, prompt the user to select one\n    if (!currentTopic) {\n        return (\n            <div className=\"flex justify-center items-center h-full p-4\">\n                {/* Tailwind: Center content with flexbox */}\n                <p className=\"text-lg text-gray-600\">\n                    Please select a topic to view its content.\n                </p>\n            </div>\n        );\n    }\n\n    // Loading state\n    if (isLoading) {\n        return (\n            <div className=\"flex justify-center items-center h-full p-4\">\n                {/* Tailwind: Center text and style with text-gray-600 */}\n                <p className=\"text-lg text-gray-600\">Loading content...</p>\n            </div>\n        );\n    }\n\n    // Error state\n    if (error) {\n        return (\n            <div className=\"flex justify-center items-center h-full p-4\">\n                {/* Tailwind: Display error message in red */}\n                <p className=\"text-lg text-red-500\">\n                    Error loading content. Please try again later.\n                </p>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"content-container mx-auto p-4\">\n            {/* Tailwind: mx-auto centers the container, p-4 applies padding */}\n            {data.sections && data.sections.map((section) => renderContent(section))}\n        </div>\n    );\n};\n\nexport default ContentContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}